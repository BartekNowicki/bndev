{"version":3,"sources":["pics/arrow.svg","pics/html5.svg","pics/css3.svg","pics/javascript.svg","pics/react.svg","pics/nodejs.svg","pics/express.svg","pics/mongodb.svg","pics/svg.svg","pics/closeBtn.svg","components/Clouds.js","components/House.js","components/Developer.js","components/IntroAnimation.js","components/Bio.js","components/Bio2.js","components/Contact.js","components/ContactIcon.js","components/ErrorPage.js","components/CloudsCloseBtn.js","components/Loader.js","components/SwipeIfMobile.js","components/Baloon.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","logoArray","html5Logo","css3Logo","javascriptLogo","reactLogo","nodejsLogo","expressLogo","mongodbLogo","svgLogo","Clouds","props","arrayOfClouds","data","map","cloud","index","key","id","className","isClicked","cloudClass","onClick","e","handleCloudClick","cloudLogoClass","src","alt","logoAlt","House","Developer","IntroAnimation","shouldIstartAnimations","to","Bio","svgArrow","Bio2","href","target","Contact","ContactIcon","ErrorPage","CloudsCloseBtn","handleCloudCloseClick","closeBtn","Loader","SwipeIfMobile","clientX","clientY","deltaX","deltaY","swipeBox","document","createElement","classList","add","addEventListener","touches","changedTouches","swipeHandler","body","removeChild","appendChild","Baloon","state","setNewBaloonPosition","event","ratioX","ratioY","window","innerWidth","innerHeight","setState","removeEventListener","this","style","transform","Component","App","isAllLoaded","isSwiped","isAnyCloudActive","isDeviceMobile","cloudData","cloudText","cloudId","console","log","cloudDataCopy","forEach","item","cloudDataCopyUpdated","prevState","handleSwipe","checkIfAnyCloudActive","filter","length","checkIfMobileDevice","checkedElement","querySelector","getComputedStyle","getPropertyValue","removeSwipeIfNotMobile","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.344f324b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.5f03f27f.svg\";","module.exports = __webpack_public_path__ + \"static/media/html5.676e8188.svg\";","module.exports = __webpack_public_path__ + \"static/media/css3.3707da3c.svg\";","module.exports = __webpack_public_path__ + \"static/media/javascript.61ed8b05.svg\";","module.exports = __webpack_public_path__ + \"static/media/react.4009eef3.svg\";","module.exports = __webpack_public_path__ + \"static/media/nodejs.a1231528.svg\";","module.exports = __webpack_public_path__ + \"static/media/express.c6bab64b.svg\";","module.exports = __webpack_public_path__ + \"static/media/mongodb.2985235d.svg\";","module.exports = __webpack_public_path__ + \"static/media/svg.f3dce133.svg\";","module.exports = __webpack_public_path__ + \"static/media/closeBtn.918a9f9d.svg\";","import React from 'react';\r\nimport html5Logo from '../pics/html5.svg';\r\nimport css3Logo from '../pics/css3.svg';   \r\nimport javascriptLogo from '../pics/javascript.svg';   \r\nimport reactLogo from '../pics/react.svg';   \r\nimport nodejsLogo from '../pics/nodejs.svg';   \r\nimport expressLogo from '../pics/express.svg';   \r\nimport mongodbLogo from '../pics/mongodb.svg';   \r\nimport svgLogo from '../pics/svg.svg';\r\n\r\nconst logoArray = [html5Logo, css3Logo, javascriptLogo, reactLogo, nodejsLogo, expressLogo, mongodbLogo, svgLogo];\r\n\r\nconst Clouds = props => {\r\n        \r\n    const arrayOfClouds = props.data.map((cloud, index) => \r\n    <div key = {cloud.id} className={cloud.isClicked ? cloud.cloudClass + ' activeCloud'+cloud.id : cloud.cloudClass}  onClick = {(e) => props.handleCloudClick(cloud.id)}><img className={cloud.cloudLogoClass} src={logoArray[index]} alt={cloud.logoAlt}/></div>);   \r\n       \r\n  return (\r\n\t  <>\r\n    {arrayOfClouds}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Clouds;\r\n","import React from 'react';\r\n\r\nconst House = props => {\r\n  return (\r\n\t<>\r\n    <div className=\"houseIcon\"></div>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default House;","import React from 'react';\r\n\r\nconst Developer = props => {\r\n  return (\r\n\t<>\r\n    <div className=\"centralFigureWrap\">\r\n      <div className=\"centralFigureBowtieWrap\">\r\n      </div>\r\n    </div>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default Developer;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst text1 = 'my name is';\r\nconst text2 = 'Bartosz Nowicki';\r\nconst text3 = 'I am a';\r\nconst text4 = 'junior';\r\nconst text5 = 'web developer';\r\nconst text6 = 'feel free to'; \r\nconst text7 = `clickAround();`;\r\nconst text8 = `.then(value => {`;\r\nconst text9 = `console.log(\"hired!\")`;\r\nconst text10 = `});`;\r\n\r\nconst IntroAnimation = props => {\r\n  const shouldIstartAnimations = props;\r\n  return (\r\n\t<>\r\n  <div className=\"daScroll\">\r\n  <NavLink to=\"/bio\"><div className=\"redBlob\"></div></NavLink>\r\n  \r\n    <span className = \"tekst1Class\">{text1}</span>\r\n    <span className = {shouldIstartAnimations ? \"tekst2Class\" : \"tekst2Class animationPaused\"} >{text2}</span>    \r\n    <span className = \"tekst3Class\">{text3}</span>    \r\n    <span className = \"tekst4Class\">{text4}</span>\r\n    <span className = \"tekst5Class\">{text5}</span>\r\n    <span className = \"tekst6Class\">{text6}</span>\r\n    <span className = \"tekst7Class\"><span className = \"innerSpanForCodeAnimationtekst7\">{text7}</span></span>\r\n    <span className = \"tekst8Class\"><span className = \"innerSpanForCodeAnimationtekst8\">{text8}</span></span>\r\n    <span className = \"tekst9Class\"><span className = \"innerSpanForCodeAnimationtekst9\">{text9}</span></span>\r\n    <span className = \"tekst10Class\"><span className = \"innerSpanForCodeAnimationtekst10\">{text10}</span></span>\r\n  </div>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default IntroAnimation;","import React from 'react';\r\nimport svgArrow from '../pics/arrow.svg';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Bio = props => {\r\n  return (\r\n\t<>\r\n    <div className=\"daScroll\">\r\n        <NavLink to=\"/bio2\"><div className=\"redBlob\"></div></NavLink>\r\n        <div className=\"bioTextWrap\">\r\n    \r\n            <p className=\"bioTextTitleClass\">Are you looking to hire </p>            \r\n            <p className=\"bioTextTitleClass\">a junior web developer?</p>\r\n            <p className=\"bioTextTitleClass bioColor\">someone who</p>\r\n            <p className=\"bioTextClass\"><img src={svgArrow} className=\"arrow\" alt=\"\"/> is college educated</p>\r\n            <p className=\"bioTextClass\"><img src={svgArrow} className=\"arrow\" alt=\"\"/> pays great attention to detail</p>\r\n            <p className=\"bioTextClass\"><img src={svgArrow} className=\"arrow\" alt=\"\"/>shows creativity and critical thinking</p>\r\n            <p className=\"bioTextClass\"><img src={svgArrow} className=\"arrow\" alt=\"\"/>communicates well with the team</p>\r\n            <p className=\"bioTextClass\"><img src={svgArrow} className=\"arrow\" alt=\"\"/>is willing to \r\n            <span className=\"emphasizeBioItem\"> learn</span>\r\n            <span className=\"emphasizeBioItem\"> fast</span>\r\n            <span className=\"emphasizeBioItem\"> and</span>\r\n            <span className=\"emphasizeBioItem\"> effectively</span></p>\r\n            <p className=\"bioTextClass\"><img src={svgArrow} className=\"arrow\" alt=\"\"/>has a passion for coding and web dev</p>\r\n            <p className=\"bioTextClass\"><img src={svgArrow} className=\"arrow\" alt=\"\"/>is internally motivated with a drive to deliver</p>\r\n            <p className=\"bioTextClass\"><img src={svgArrow} className=\"arrow\" alt=\"\"/>appreciates a sense of humor</p>\r\n            <p className=\"bioTextTitleClass bioColor\">reach out and let's talk!</p>\r\n        </div>\r\n    </div>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default Bio;","import React from 'react';\r\nimport svgArrow from '../pics/arrow.svg';\r\n\r\nconst Bio2 = props => {\r\n  return (\r\n\t<>\r\n    <div className=\"daScrollNoBlob\">\r\n        \r\n        <div className=\"bioTextWrap\">\r\n    \r\n            <p className=\"bioTextTitleClass\">When coding I ...</p>\r\n            <p className=\"bioTextTitleClass bioColor\">Aim for</p>\r\n            <p className=\"bioTextClass\"><img src={svgArrow} className=\"arrow\" alt =\"\"/>clean self-explanatory code</p>\r\n            <p className=\"bioTextClass\"><img src={svgArrow} className=\"arrow\" alt =\"\"/>accounting for all edge cases</p>\r\n            <p className=\"bioTextClass\"><img src={svgArrow} className=\"arrow\" alt =\"\"/>responsive design</p>\r\n            <p className=\"bioTextClass\"><img src={svgArrow} className=\"arrow\" alt =\"\"/>pleasing UX</p>\r\n            <p className=\"bioTextTitleClass bioColor\">Enjoy the most</p>\r\n            <p className=\"bioTextClass\"><img src={svgArrow} className=\"arrow\" alt =\"\"/>css tricks, effects and animations</p>\r\n            <p className=\"bioTextClass\"><img src={svgArrow} className=\"arrow\" alt =\"\"/>the power behind ES6 JS</p>\r\n            <p className=\"bioTextClass\"><img src={svgArrow} className=\"arrow\" alt =\"\"/>art and creativity</p>\r\n            <p className=\"bioTextTitleClass\">I am currently working on</p>\r\n            {/* <p className=\"bioTextClass small\">https://www.konferencyjni.pl/</p>\r\n            <p className=\"bioTextClass small\">https://barteknowicki.github.io/OlgaTlumaczy/</p> */}\r\n            \r\n             <p className=\"bioTextClass small\"><a href=\"https://www.konferencyjni.pl/\" target=\"_blank\">konferencyjni.pl</a></p> \r\n             <p className=\"bioTextClass small\"><a href=\"https://barteknowicki.github.io/OlgaTlumaczy/\" target=\"_blank\">OlgaTlumaczy.pl</a></p> \r\n        </div>\r\n    </div>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default Bio2;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Contact = props => {\r\n  return (\r\n\t<>\r\n    <div className=\"daScroll\">\r\n    <NavLink to=\"/bio\"><div className=\"redBlob\"></div></NavLink>\r\n        <div className=\"bioTextWrap\">    \r\n            <p className=\"bioTextTitleClass large\">Nowicki, Bartek</p>\r\n            <p className=\"bioTextTitleClass bioColor\">at your service!</p>\r\n            <div className=\"phoneIcon\"></div>\r\n            <p className=\"bioTextTitleClass contactDetails\">( +48 )  605 - 769 - 837</p>\r\n            <div className=\"writeIcon\"></div>\r\n            <p className=\"bioTextTitleClass contactDetails\">bardo@bardo.com.pl</p>\r\n            \r\n        </div>\r\n    </div>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\n\r\nconst ContactIcon = props => {\r\n  return (\r\n\t<>\r\n    <div className=\"contactIcon\"></div>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default ContactIcon;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst ErrorPage = props => {\r\n  return (\r\n\t<>\r\n    <div className=\"daScroll\">\r\n    <NavLink to=\"/bio\"><div className=\"redBlob\"></div></NavLink>\r\n        <div className=\"bioTextWrap\">    \r\n            <p className=\"bioTextTitleClass large\">Gone fishing...</p>\r\n            <p className=\"bioTextTitleClass bioColor\">Click my head and I'll be back!</p>\r\n            <div className=\"astro\"></div>\r\n        </div>\r\n    </div>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default ErrorPage;","import React from 'react';\r\nimport closeBtn from '../pics/closeBtn.svg';\r\n\r\nconst CloudsCloseBtn = props => {\r\n  return (\r\n\t<>\r\n    <div className=\"cloudsCloseBtn\" onClick = {props.handleCloudCloseClick}><img className=\"cloudsCloseBtnImg\" src={closeBtn} alt=\"\"/></div>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default CloudsCloseBtn;","import React from 'react';\r\n\r\nconst Loader = props => {\r\n  return (\r\n\t<>\r\n    <div className=\"loader\">\r\n            <p className=\"bioTextTitleClass large\">Loading...</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Loader;","// import React from 'react';\r\n\r\nconst SwipeIfMobile = (props) => {\r\n    let clientX = null;\r\n    let clientY = null;\r\n    let deltaX = null;\r\n    let deltaY = null;\r\n    const swipeBox = document.createElement('div');\r\n    swipeBox.classList.add('mobileSwipe');\r\n    swipeBox.addEventListener('touchstart', (e) => {\r\n        clientX = e.touches[0].clientX; \r\n        clientY = e.touches[0].clientY;\r\n    });\r\n    swipeBox.addEventListener('touchend', (e) => {\r\n        deltaX = e.changedTouches[0].clientX - clientX;\r\n        deltaY = e.changedTouches[0].clientY - clientY;\r\n        if (deltaX > 0 || deltaY > 0) {\r\n            props.swipeHandler();\r\n            document.body.removeChild(swipeBox);\r\n        }\r\n    });\r\n    \r\n    document.body.appendChild(swipeBox);\r\n\r\nreturn null\r\n}\r\n\r\nexport default SwipeIfMobile;\r\n\r\n","import React, { Component } from 'react';\r\n\r\nclass Baloon extends Component {\r\n\r\n  state = {\r\n      deltaX : 0,\r\n      deltaY : 0,\r\n  }\r\n\r\n  componentDidMount() {\r\n      document.addEventListener('click', (event) => this.setNewBaloonPosition(event));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('click', (event) => this.setNewBaloonPosition(event));\r\n  }\r\n\r\n  setNewBaloonPosition = (event) => {\r\n      const { clientX, clientY } = event;\r\n      const { ratioX, ratioY } = this.props;\r\n    //   console.log('CLIENTX: ',clientX, 'CLIENTY: ', clientY);\r\n      const screenCenterX = window.innerWidth / 2;\r\n      const screenCenterY = window.innerHeight / 2;\r\n      const deltaX = clientX - screenCenterX;\r\n      const deltaY = clientY - screenCenterY;\r\n      this.setState({\r\n        deltaX : deltaX * -ratioX,\r\n        deltaY : deltaY * -ratioY,\r\n      });\r\n  } \r\n\r\n  render() {\r\n    const { deltaX, deltaY } = this.state;\r\n    const { className } = this.props;\r\n    return (\r\n\t<>\r\n    <div\r\n    className = {className} \r\n    style = {{transform: `translate(${deltaX}px, ${deltaY}px)`}} \r\n    />\r\n    </>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Baloon;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, NavLink, Route, Switch } from 'react-router-dom';\r\nimport Clouds from './components/Clouds';\r\nimport House from './components/House';\r\nimport Developer from './components/Developer';\r\nimport IntroAnimation from './components/IntroAnimation';\r\nimport Bio from './components/Bio';\r\nimport Bio2 from './components/Bio2';\r\nimport Contact from './components/Contact';\r\nimport ContactIcon from './components/ContactIcon';\r\nimport ErrorPage from './components/ErrorPage';\r\nimport CloudsCloseBtn from './components/CloudsCloseBtn';\r\nimport Loader from './components/Loader';\r\nimport SwipeIfMobile from './components/SwipeIfMobile';\r\nimport Baloon from './components/Baloon';\r\n// import svgArrow from '../pics/arrow.svg';\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n    state = {\r\n      isAllLoaded : false,\r\n      isSwiped : false,\r\n      isAnyCloudActive : false,\r\n      isDeviceMobile: false,\r\n      \r\n      cloudData: [{\r\n        id: 1,\r\n        cloudClass : 'cloudWrap1',\r\n        cloudText: 'cloud1',\r\n        isClicked: false,\r\n        cloudLogoClass: 'cloudLogoClass1',\r\n        logoAlt: 'HTML5',\r\n      \r\n      },{\r\n        id: 2,\r\n        cloudClass : 'cloudWrap2',\r\n        cloudText: 'cloud2',\r\n        isClicked: false,\r\n        cloudLogoClass: 'cloudLogoClass2',\r\n        logoAlt: 'CSS3',\r\n      \r\n      },{\r\n        id: 3,\r\n        cloudClass : 'cloudWrap3',\r\n        cloudText: 'cloud3',\r\n        isClicked: false,\r\n        cloudLogoClass: 'cloudLogoClass3',\r\n        logoAlt: 'JAVASCRIPT',\r\n      \r\n      },{\r\n        id: 4,\r\n        cloudClass : 'cloudWrap4',\r\n        cloudText: 'cloud4',\r\n        isClicked: false,\r\n        cloudLogoClass: 'cloudLogoClass4',\r\n        logoAlt: 'REACT',\r\n      \r\n      },{\r\n        id: 5,\r\n        cloudClass : 'cloudWrap5',\r\n        cloudText: 'cloud5',\r\n        isClicked: false,\r\n        cloudLogoClass: 'cloudLogoClass5',\r\n        logoAlt: 'NODE',\r\n      \r\n      },{\r\n        id: 6,\r\n        cloudClass : 'cloudWrap6',\r\n        cloudText: 'cloud6',\r\n        isClicked: false,\r\n        cloudLogoClass: 'cloudLogoClass6',\r\n        logoAlt: 'EXPRESS',\r\n      \r\n      },{\r\n        id: 7,\r\n        cloudClass : 'cloudWrap7',\r\n        cloudText: 'cloud7',\r\n        isClicked: false,\r\n        cloudLogoClass: 'cloudLogoClass7',\r\n        logoAlt: 'MONGO',\r\n      \r\n      },{\r\n        id: 8,\r\n        cloudClass : 'cloudWrap8',\r\n        cloudText: 'cloud8',\r\n        isClicked: false,\r\n        cloudLogoClass: 'cloudLogoClass8',\r\n        logoAlt: 'SVG',\r\n      \r\n      }]\r\n    }\r\n\r\n    //mark the cloud as clicked\r\n    handleCloudClick = (cloudId) => {\r\n      console.log('click: ', cloudId);\r\n      const cloudDataCopy = [...this.state.cloudData];      \r\n      cloudDataCopy.forEach(item => {\r\n        if(item.id === cloudId) {\r\n        item.isClicked = !item.isClicked\r\n      }\r\n      });\r\n      const cloudDataCopyUpdated = cloudDataCopy;\r\n      this.setState(prevState => (\r\n        { cloudData : cloudDataCopyUpdated,\r\n        }));\r\n    }\r\n\r\n    handleSwipe = () => {\r\n      console.log('SWIPE!');\r\n      this.setState(prevState => ({ isSwiped : true, }));\r\n    }\r\n    \r\n    handleCloudCloseClick = () => {\r\n      const cloudDataCopy = [...this.state.cloudData];      \r\n      cloudDataCopy.forEach(item => {item.isClicked = false});\r\n      const cloudDataCopyUpdated = cloudDataCopy;\r\n      this.setState(prevState => (\r\n        { cloudData : cloudDataCopyUpdated,\r\n        }));\r\n    }\r\n\r\n    componentDidMount(){\r\n      console.log('The mounting is complete.');      \r\n      window.addEventListener('load', () => {\r\n        if (!this.state.isAllLoaded) this.setState({isAllLoaded: true});\r\n        this.removeSwipeIfNotMobile();\r\n      });\r\n    }\r\n\r\n    componentWillUnmount() {            \r\n      window.removeEventListener('load', () => {\r\n        if (!this.state.isAllLoaded) this.setState({isAllLoaded: true});\r\n        this.removeSwipeIfNotMobile();\r\n      });\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if (this.checkIfAnyCloudActive()) {\r\n           if (!this.state.isAnyCloudActive) this.setState({isAnyCloudActive: true})\r\n        } else {\r\n           if (this.state.isAnyCloudActive) this.setState({isAnyCloudActive: false})}\r\n    }\r\n\r\n    checkIfAnyCloudActive = () => {\r\n      if (this.state.cloudData.filter(item => item.isClicked).length > 0){   \r\n        // console.log('we have an active cloud or two!');     \r\n        return true;\r\n      }\r\n      // console.log('no active clouds found...');\r\n      return false;\r\n    }  \r\n    \r\n    checkIfMobileDevice = () => {\r\n      const checkedElement = document.querySelector('.mobileSwipe');\r\n      if (checkedElement) {\r\n        // console.log('checkedElement: ', checkedElement);\r\n        const SwipeVisibility = window.getComputedStyle(checkedElement).getPropertyValue('display');\r\n        // console.log('SwipeVisibility: ', SwipeVisibility);\r\n        if (SwipeVisibility === 'none') {\r\n          console.log('swipe exists but is invisible - this is a desktop');\r\n          this.setState({isDeviceMobile: true});\r\n        }\r\n    }\r\n    } \r\n    \r\n    removeSwipeIfNotMobile = () => {\r\n      console.log('trying to remove swipe if this is not a mobile device');\r\n      this.checkIfMobileDevice();\r\n      if (this.state.isDeviceMobile) {\r\n          console.log('performing virtual swipe');\r\n          this.handleSwipe();\r\n      }\r\n    };\r\n    \r\n   \r\n    render(){ \r\n    \r\n      if (!this.state.isAllLoaded) {\r\n        return <Loader/>\r\n      } else return (\r\n        <>\r\n        {!this.state.isSwiped && <SwipeIfMobile swipeHandler = {this.handleSwipe}/>}\r\n        <div className=\"baloonArea\">\r\n              <Baloon className = \"baloon1\" ratioX = \"0.1\" ratioY = \"0.7\"/>\r\n              <Baloon className = \"baloon2\" ratioX = \"0.2\" ratioY = \"0.5\"/>\r\n              <Baloon className = \"baloon3\" ratioX = \"0.3\" ratioY = \"0.3\"/>\r\n              <Baloon className = \"baloon4\" ratioX = \"0.4\" ratioY = \"0.2\"/>\r\n              <Baloon className = \"baloon5\" ratioX = \"0.5\" ratioY = \"0.1\"/>\r\n        </div>\r\n        \r\n        <Router>\r\n          <div className=\"pageWrap\">\r\n                <Clouds data = {this.state.cloudData} handleCloudClick = {this.handleCloudClick}/>\r\n                {this.state.isAnyCloudActive && <CloudsCloseBtn handleCloudCloseClick = {this.handleCloudCloseClick}/>}\r\n                <NavLink to=\"/contact\"><ContactIcon/></NavLink>\r\n                <NavLink to=\"/\"><House/></NavLink>\r\n                <NavLink to=\"/bio\"><Developer/></NavLink>                \r\n                   \r\n                   <section className=\"mainSectionWrap\">\r\n                        <Switch>\r\n                        <Route path=\"/bndev/\" exact component={()=> IntroAnimation(this.state.isSwiped)} />\r\n                        <Route path=\"/\" exact component={()=> IntroAnimation(this.state.isSwiped)} />\r\n                        <Route path=\"/bio\" component={Bio} />\r\n                        <Route path=\"/bio2\" component={Bio2} />\r\n                        <Route path=\"/contact\" component={Contact} />\r\n                        <Route component={ErrorPage}/>\r\n                        </Switch>\r\n                   </section>\r\n          </div>\r\n        </Router>\r\n        </>\r\n    );\r\n  }}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}